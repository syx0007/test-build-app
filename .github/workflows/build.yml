name: Build Windows Executables (x64 + x86)

on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  build-windows:
    strategy:
      matrix:
        include:
          - architecture: x64
            python_version: '3.10'
            artifact_suffix: 'windows-x64'
          - architecture: x86
            python_version: '3.10'
            artifact_suffix: 'windows-x86'

    runs-on: windows-latest
    name: Build Windows ${{ matrix.architecture }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python_version }} (${{ matrix.architecture }})
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python_version }}
        architecture: ${{ matrix.architecture }}

    - name: Display Python info (FIXED)
      run: |
        python --version
        python -c "import platform; print('Architecture: ' + platform.machine())"
        python -c "import struct; print('Pointer size: ' + str(struct.calcsize('P') * 8) + '-bit')"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller==6.15.0 flask==3.1.2 mutagen==1.47.0 requests==2.32.5 flask_cors==4.0.0
        pip install "pyside6==6.6.1" --timeout=180

    - name: Build executable
      run: |
        # 检查图标文件
        $iconOption = ""
        if (Test-Path "icon.ico") {
          $iconOption = "--icon=icon.ico --add-data `"icon.ico;.`""
        }
        
        # 使用单引号避免转义问题
        $buildCmd = @'
python -m PyInstaller `
  --onefile `
  --windowed `
  --name MusicMetadataProcessor `
'@ + $iconOption + @'
  --hidden-import=flask `
  --hidden-import=flask_cors `
  --hidden-import=mutagen `
  --hidden-import=requests `
  --hidden-import=PySide6 `
  --hidden-import=PySide6.QtWidgets `
  --hidden-import=PySide6.QtCore `
  --hidden-import=PySide6.QtGui `
  --clean `
  --noconfirm `
  app_gui.py
'@
        
        Write-Output "执行构建命令..."
        Invoke-Expression $buildCmd
        
        if (Test-Path "dist/MusicMetadataProcessor.exe") {
          $newName = "MusicMetadataProcessor_${{ matrix.artifact_suffix }}.exe"
          Move-Item "dist/MusicMetadataProcessor.exe" "dist/$newName"
          Write-Output "✅ 构建成功: $newName"
        } else {
          Write-Output "❌ 构建失败"
          exit 1
        }

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_suffix }}
        path: dist/MusicMetadataProcessor_${{ matrix.artifact_suffix }}.exe
